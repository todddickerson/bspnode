name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bspnode_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Setup environment
      run: |
        cp .env.example .env.local
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/bspnode_test" >> .env.local
        echo "NEXTAUTH_URL=http://localhost:3001" >> .env.local
        echo "NEXTAUTH_SECRET=test-secret-for-ci" >> .env.local
    
    - name: Run database migrations
      run: |
        npx prisma migrate deploy
        npx prisma generate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bspnode_test
    
    - name: Setup test users
      run: npm run test:setup
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bspnode_test
    
    - name: Run Playwright tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bspnode_test
        CI: true
    
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: test-results/
        retention-days: 30